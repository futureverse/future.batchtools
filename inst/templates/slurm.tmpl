#!/bin/bash
######################################################################
# A batchtools launch script template for Slurm
#
# Author: Henrik Bengtsson 
######################################################################


#SBATCH --job-name=<%= job.name %>
#SBATCH --output=<%= log.file %>
<%
defaults <- list(
  nodes = 1,         # single-host processing
  time = "00:05:00", # 5-min runtime
  mem  = "100M"      # 100 MiB memory
)
resources <- c(resources, defaults[setdiff(names(defaults), names(resources))])
opts <- unlist(resources, use.names = TRUE)
opts <- sprintf("--%s=%s", names(opts), opts)
writeLines(sprintf("#SBATCH %s", opts))
%>

echo "Batchtools information:"
echo "- job name: '<%= job.name %>'"
echo "- job log file: '<%= log.file %>'"
echo

echo "Session information:"
echo "- timestamp: $(date)"
echo "- hostname: $(hostname)"
echo "- Rscript path: $(which Rscript)"
echo "- Rscript version: $(Rscript --version)"
echo "- Rscript library paths: $(Rscript -e "cat(shQuote(.libPaths()), sep = ' ')")"
echo

echo "Job submission declarations:"
<%
writeLines(sprintf("echo '#SBATCH %s'", opts))
%>

echo "Slurm job information:"
scontrol show job "${SLURM_JOB_ID}"
echo

## Launch R and evaluate the batchtools R job
echo "Command: Rscript -e 'batchtools::doJobCollection("<%= uri %>")' ..."
Rscript -e 'batchtools::doJobCollection("<%= uri %>")'
res=$?
echo " - exit code: ${res}"
echo "Command: Rscript -e 'batchtools::doJobCollection("<%= uri %>")' ... done"

## End-of-job summary
sstat --format="JobID,AveCPU,MaxRSS,MaxPages,MaxDiskRead,MaxDiskWrite" --allsteps --jobs="${SLURM_JOB_ID}"

## Relay the exit code from Rscript
exit "${res}"
