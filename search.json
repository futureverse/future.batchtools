[{"path":[]},{"path":"https://future.batchtools.futureverse.org/CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://future.batchtools.futureverse.org/CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://future.batchtools.futureverse.org/CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://future.batchtools.futureverse.org/CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://future.batchtools.futureverse.org/CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://future.batchtools.futureverse.org/CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"https://future.batchtools.futureverse.org/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to the ‘future.batchtools’ package","title":"Contributing to the ‘future.batchtools’ package","text":"Git repository uses Git Flow branching model (git flow extension useful ). develop branch contains latest contributions code appear next release, master branch contains code latest release, exactly currently CRAN. Contributing package easy. Just send pull request. send PR, make sure develop destination branch future.batchtools repository. PR pass R CMD check ---cran, also checked GitHub Actions PR submitted. abide Code Conduct Contributor Covenant.","code":""},{"path":"https://future.batchtools.futureverse.org/OVERVIEW.html","id":"drop-the-header-ie-anything-before-the-first-h2-header","dir":"","previous_headings":"","what":"Drop the header, i.e. anything before the first “H2” header","title":"NA","text":"md <- unlist(strsplit(md, split=“”, fixed=TRUE)) row <- grep(“^##”, md)[1] (!.na(row)) md <- md[-seq_len(row-1)]","code":""},{"path":"https://future.batchtools.futureverse.org/OVERVIEW.html","id":"drop-the-footer-ie-anything-after-the-first-horizontal-line","dir":"","previous_headings":"","what":"Drop the footer, i.e. anything after the first horizontal line","title":"NA","text":"row <- grep(“^—”, md)[1] (!.na(row)) md <- md[seq_len(row-1)]","code":""},{"path":"https://future.batchtools.futureverse.org/OVERVIEW.html","id":"output","dir":"","previous_headings":"","what":"Output","title":"NA","text":"cat(md, sep=“”) %>","code":""},{"path":"https://future.batchtools.futureverse.org/articles/future.batchtools.html","id":"tldr","dir":"Articles","previous_headings":"","what":"TL;DR","title":"A Future for batchtools","text":"example evaluate R expressions Slurm high-performance compute (HPC) cluster within R.","code":"library(future)  # Limit runtime to 10 minutes and memory to 400 MiB per future, # request a parallel environment with four slots on a single host. # On this system, R is available via environment module 'r'. By # specifying 'r/4.5.1', 'module load r/4.5.1' will be added to # the submitted job script. plan(future.batchtools::batchtools_slurm, resources = list(   time = \"00:10:00\", mem = \"400M\", nodes = 1, ntasks = 4,   modules = c(\"r/4.5.1\") ))  # Give it a spin f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) #>   hostname    os cores  modules #> 1      n12 Linux     4  r/4.5.1"},{"path":"https://future.batchtools.futureverse.org/articles/future.batchtools.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"A Future for batchtools","text":"future package provides generic API using futures R. future simple yet powerful mechanism evaluate R expression retrieve value point time. Futures can resolved many different ways depending strategy used. various types synchronous asynchronous futures choose future package. package, future.batchtools, provides type futures utilizes batchtools package. means type backend batchtools package supports can used future. specifically, future.batchtools allow users package leverage compute power high-performance computing (HPC) clusters via simple switch settings - without change code . instance, two two future R expression processed parallel R workers launched different compute nodes specified job scheduler: just toy example illustrate futures look like work . introduction well full details use futures, please see https://www.futureverse.org consult package vignettes future package.","code":"library(future) plan(future.batchtools::batchtools_slurm)  f_x <- future({ Sys.sleep(5); 3.14 }) f_y <- future({ Sys.sleep(5); 2.71 }) x <- value(f_x) y <- value(f_y) x + y #> [1] 5.85"},{"path":"https://future.batchtools.futureverse.org/articles/future.batchtools.html","id":"demos","dir":"Articles","previous_headings":"","what":"Demos","title":"A Future for batchtools","text":"future package provides demo using futures calculating set Mandelbrot planes. demo assume anything type futures used. user full control futures evaluated. instance, use local batchtools futures, run demo :","code":"library(future) plan(future.batchtools::batchtools_local) demo(\"mandelbrot\", package = \"future\", ask = FALSE)"},{"path":"https://future.batchtools.futureverse.org/articles/future.batchtools.html","id":"available-batchtools-backend","dir":"Articles","previous_headings":"","what":"Available batchtools backend","title":"A Future for batchtools","text":"future.batchtools package implements generic future wrapper batchtools backends. common types batchtools backends. types parallel distributed backends, please see https://www.futureverse.org/backends.html.","code":""},{"path":"https://future.batchtools.futureverse.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Henrik Bengtsson. Author, maintainer, copyright holder.","code":""},{"path":"https://future.batchtools.futureverse.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Henrik Bengtsson, Unifying Framework Parallel Distributed Processing R using Futures, R Journal (2021) 13:2, pages 208-227, doi:10.32614/RJ-2021-048","code":"@Article{RJ-2021-048,   author = {Henrik Bengtsson},   title = {A Unifying Framework for Parallel and Distributed Processing in R using Futures},   year = {2021},   journal = {The R Journal},   doi = {10.32614/RJ-2021-048},   url = {https://doi.org/10.32614/RJ-2021-048},   pages = {208--227},   volume = {13},   number = {2}, }"},{"path":[]},{"path":"https://future.batchtools.futureverse.org/index.html","id":"tldr","dir":"","previous_headings":"","what":"TL;DR","title":"A Future API for Parallel and Distributed Processing using batchtools","text":"example evaluate R expression Slurm high-performance compute (HPC) cluster.","code":"library(future)  # Limit runtime to 10 minutes and memory to 400 MiB per future, # request a parallel environment with four slots on a single host. # On this system, R is available via environment module 'r'. By # specifying 'r/4.5.1', 'module load r/4.5.1' will be added to # the submitted job script. plan(future.batchtools::batchtools_slurm, resources = list(   time = \"00:10:00\", mem = \"400M\", nodes = 1, ntasks = 4,   modules = c(\"r/4.5.1\") ))  # Give it a spin f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) #>   hostname    os cores  modules #> 1      n12 Linux     4  r/4.5.1"},{"path":"https://future.batchtools.futureverse.org/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"A Future API for Parallel and Distributed Processing using batchtools","text":"future package provides generic API using futures R. future simple yet powerful mechanism evaluate R expression retrieve value point time. Futures can resolved many different ways depending strategy used. various types synchronous asynchronous futures choose future package. package, future.batchtools, provides type futures utilizes batchtools package. means type backend batchtools package supports can used future. specifically, future.batchtools allow users package leverage compute power high-performance computing (HPC) clusters via simple switch settings - without change code . instance, batchtools properly configured, two expressions two futures processed two different compute nodes: just toy example illustrate futures look like work . introduction well full details use futures, please see https://www.futureverse.org consult package vignettes future package.","code":"library(future) plan(future.batchtools::batchtools_slurm)  f_x <- future({ Sys.sleep(5); 3.14 }) f_y <- future({ Sys.sleep(5); 2.71 }) x <- value(f_x) y <- value(f_y) x + y #> [1] 5.85"},{"path":"https://future.batchtools.futureverse.org/index.html","id":"demos","dir":"","previous_headings":"","what":"Demos","title":"A Future API for Parallel and Distributed Processing using batchtools","text":"future package provides demo using futures calculating set Mandelbrot planes. demo assume anything type futures used. user full control futures evaluated. instance, use local batchtools futures, run demo :","code":"library(future) plan(future.batchtools::batchtools_local) demo(\"mandelbrot\", package = \"future\", ask = FALSE)"},{"path":"https://future.batchtools.futureverse.org/index.html","id":"available-batchtools-backend","dir":"","previous_headings":"","what":"Available batchtools backend","title":"A Future API for Parallel and Distributed Processing using batchtools","text":"future.batchtools package implements generic future wrapper batchtools backends. common types batchtools backends. types parallel distributed backends, please see https://www.futureverse.org/backends.html.","code":""},{"path":"https://future.batchtools.futureverse.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Future API for Parallel and Distributed Processing using batchtools","text":"R package future.batchtools available CRAN can installed R :","code":"install.packages(\"future.batchtools\")"},{"path":"https://future.batchtools.futureverse.org/index.html","id":"pre-release-version","dir":"","previous_headings":"Installation","what":"Pre-release version","title":"A Future API for Parallel and Distributed Processing using batchtools","text":"install pre-release version available Git branch develop GitHub, use: install package source.","code":"remotes::install_github(\"futureverse/future.batchtools\", ref=\"develop\")"},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsFutureBackend.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools future is a future whose value will be resolved via batchtools — BatchtoolsFutureBackend","title":"A batchtools future is a future whose value will be resolved via batchtools — BatchtoolsFutureBackend","text":"batchtools local future synchronous uniprocess future evaluated background R session. batchtools interactive future synchronous uniprocess future evaluated current R session (variables assigned calling environment rather local one). types futures block futures resolved. batchtools SSH future asynchronous multiprocess future evaluated background R session.highly recommend using future::multisession (sic!) futures future package instead SSH batchtools futures.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsFutureBackend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools future is a future whose value will be resolved via batchtools — BatchtoolsFutureBackend","text":"","code":"BatchtoolsFutureBackend(   workers = 1L,   resources = list(),   finalize = getOption(\"future.finalize\", TRUE),   cluster.functions = NULL,   registry = list(),   conf.file = findConfFile(),   interrupts = TRUE,   delete = getOption(\"future.batchtools.debug\", \"on-success\"),   ... )  BatchtoolsCustomFutureBackend(...)  BatchtoolsInteractiveFutureBackend(fs.latency = 0, ...)  BatchtoolsLocalFutureBackend(fs.latency = 0, ...)  BatchtoolsSSHFutureBackend(workers = availableWorkers(), fs.latency = 65, ...)"},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsFutureBackend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools future is a future whose value will be resolved via batchtools — BatchtoolsFutureBackend","text":"workers (optional) maximum number workers batchtools backend may use time.   Interactive \"local\" backends can process one future time (workers = 1), whereas HPC backends, futures resolved via separate jobs scheduler, can multiple workers. latter, default workers = NULL, resolve getOption(\"future.batchtools.workers\", 100). resources (optional) named list passed batchtools job-script template variable resources. based batchtools::submitJobs() works, exception specially reserved names defined future.batchtools package; resources[[\"asis\"]] character vector passed -job script injected job resource declarations. resources[[\"modules\"]] character vector Linux environment modules loaded. resources[[\"startup\"]] resources[[\"shutdown\"]] character vectors shell code injected job script -. resources[[\"details\"]], TRUE, results job script outputting job details job summaries beginning end. remaining resources named elements injected named resource specification scheduler. finalize TRUE, future's batchtools Registry automatically deleted future garbage collected, otherwise . cluster.functions (optional) Assigned -future's batchtools Registry. registry (optional) named list settings applied future's batchtools Registry. convenient alternative using argument conf.file. conf.file (optional) \"batchtools-configuration\" R script, sourced future's batchtools Registry created. variables created script assigned registry. default file one found batchtools::findConfFile(), . interrupts FALSE, attempts interrupt futures take place backend, even backend supports . useful , instance, takes long time interrupt future. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. ... Additional arguments passed BatchtoolsFutureBackend().","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsFutureBackend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A batchtools future is a future whose value will be resolved via batchtools — BatchtoolsFutureBackend","text":"future::FutureBackend object class BatchtoolsFutureBackend object class BatchtoolsFuture. object class BatchtoolsUniprocessFuture. object class BatchtoolsMulticoreFuture.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsFutureBackend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools future is a future whose value will be resolved via batchtools — BatchtoolsFutureBackend","text":"batchtools local futures rely batchtools backend set batchtools::makeClusterFunctionsInteractive(external = TRUE) batchtools interactive futures one set batchtools::makeClusterFunctionsInteractive(). supported operating systems. alternative batchtools local futures use cluster futures future package single local background session, .e. plan(cluster, workers = \"localhost\"). alternative batchtools interactive futures use plan(sequential, split = TRUE) futures future package. batchtools SSH futures rely batchtools backend set batchtools::makeClusterFunctionsSSH(). batchtools SSH backend works operating systems supporting ssh ps command-line tool, e.g. Linux macOS.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsFutureBackend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A batchtools future is a future whose value will be resolved via batchtools — BatchtoolsFutureBackend","text":"","code":"library(future)  ## Create custom cluster functions (here same as \"local\") cf <- batchtools::makeClusterFunctionsInteractive(external = TRUE) print(cf) #> ClusterFunctions for mode: Interactive #>   List queued Jobs : FALSE #>   List running Jobs: FALSE #>   Kill Jobs        : FALSE #>   Hooks            : - str(cf) #> List of 11 #>  $ name                : chr \"Interactive\" #>  $ submitJob           :function (reg, jc)   #>  $ killJob             : NULL #>  $ listJobsQueued      : NULL #>  $ listJobsRunning     : NULL #>  $ array.var           : chr NA #>  $ store.job.collection: logi TRUE #>  $ store.job.files     : logi FALSE #>  $ scheduler.latency   : num 0 #>  $ fs.latency          : num 0 #>  $ hooks               : list() #>  - attr(*, \"class\")= chr \"ClusterFunctions\"  # Use custom batchtools backend plan(future.batchtools::batchtools_custom, cluster.functions = cf) print(plan()) #> batchtools_custom: #> - args: function (..., cluster.functions = list(name = \"Interactive\", submitJob = function (reg, jc) { assertRegistry(reg, writeable = TRUE) assertClass(jc, \"JobCollection\") if (external) { runOSCommand(Rscript(), sprintf(\"-e \\\"batchtools::doJobCollection('%s', output = '%s')\\\"\", jc$uri, jc$log.file)) } else { doJobCollection(jc, output = jc$log.file) } makeSubmitJobResult(status = 0L, batch.id = \"cfInteractive\") }, killJob = NULL, listJobsQueued = NULL, listJobsRunning = NULL, array.var = NA_character_, store.job.collection = TRUE, store.job.files = FALSE, scheduler.latency = 0, fs.latency = 0, hooks = list()), workers = \"<NULL>\") #> - tweaked: TRUE #> - call: plan(future.batchtools::batchtools_custom, cluster.functions = cf) #> BatchtoolsCustomFutureBackend: #> Inherits: BatchtoolsMultiprocessFutureBackend, BatchtoolsFutureBackend, MultiprocessFutureBackend, FutureBackend #> UUID: dc0ded4b55880a6736da12a4bfe8dad6 #> Number of workers: 1 #> Number of free workers: 1 #> Available cores: 8 #> Automatic garbage collection: FALSE #> Early signaling: FALSE #> Interrupts are enabled: TRUE #> Maximum total size of globals: +Inf #> Maximum total size of value: +Inf #> Number of active futures: 0 #> Number of futures since start: 0 (0 created, 0 launched, 0 finished) #> Total runtime of futures: 0 secs (NaN secs/finished future) #> batchtools configuration file: <NA> #> batchtools cluster functions: ‘Interactive’ #> batchtools cluster functions template: <NA> #> Cache directory: ‘/tmp/hb/RtmpwNP1Ow/future.batchtools/docs/reference/.future/20250825_094402-zM28vH’ (0 folders) #> batchtools resources: #>  list()  message(\"Main process ID: \", Sys.getpid()) #> Main process ID: 1009340  f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),          pid = Sys.getpid(),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) #>     hostname    os cores     pid #> 1 hb-x1-2025 Linux     8 1009540 #>                                                                                                                                                                                                    modules #> 1 CBI:r/4.5.1:bat/0.25.0:fzf/0.65.1:shellcheck/0.11.0:shellcheck-repl/0.4.4:restic/0.18.0:git-flow/1.12.3:git-extras/7.4.0:github-cli/2.76.2:port4me/0.7.1:pandoc/3.7.0.2:quarto/1.7.33:bash-startup/0.5.0"},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsFutureError.html","id":null,"dir":"Reference","previous_headings":"","what":"FutureError class for errors related to BatchtoolsFuture:s — BatchtoolsFutureError","title":"FutureError class for errors related to BatchtoolsFuture:s — BatchtoolsFutureError","text":"FutureError class errors related BatchtoolsFuture:s","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsFutureError.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FutureError class for errors related to BatchtoolsFuture:s — BatchtoolsFutureError","text":"","code":"BatchtoolsFutureError(...)"},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsFutureError.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FutureError class for errors related to BatchtoolsFuture:s — BatchtoolsFutureError","text":"... Arguments passed FutureError.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsMulticoreFutureBackend.html","id":null,"dir":"Reference","previous_headings":"","what":"batchtools multicore futures — BatchtoolsMulticoreFutureBackend","title":"batchtools multicore futures — BatchtoolsMulticoreFutureBackend","text":"batchtools multicore future asynchronous multiprocess future evaluated background R session.highly recommend using future::multisession (sic!) futures future package instead multicore batchtools futures.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsMulticoreFutureBackend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"batchtools multicore futures — BatchtoolsMulticoreFutureBackend","text":"","code":"BatchtoolsMulticoreFutureBackend(   workers = availableCores(constraints = \"multicore\"),   fs.latency = 0,   delete = getOption(\"future.batchtools.delete\", \"on-success\"),   ... )"},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsMulticoreFutureBackend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"batchtools multicore futures — BatchtoolsMulticoreFutureBackend","text":"workers number multicore processes available concurrent batchtools multicore futures. fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. ... Additional arguments passed BatchtoolsFutureBackend().","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsMulticoreFutureBackend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"batchtools multicore futures — BatchtoolsMulticoreFutureBackend","text":"object class BatchtoolsMulticoreFuture.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsMulticoreFutureBackend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"batchtools multicore futures — BatchtoolsMulticoreFutureBackend","text":"batchtools multicore futures rely batchtools backend set batchtools::makeClusterFunctionsMulticore(). batchtools multicore backend works operating systems supporting ps command-line tool, e.g. Linux macOS.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsTemplateFutureBackend.html","id":null,"dir":"Reference","previous_headings":"","what":"Batchtools futures for LSF, OpenLava, SGE, Slurm, TORQUE etc. — BatchtoolsTemplateFutureBackend","title":"Batchtools futures for LSF, OpenLava, SGE, Slurm, TORQUE etc. — BatchtoolsTemplateFutureBackend","text":"Batchtools futures LSF, OpenLava, SGE, Slurm, TORQUE etc. asynchronous multiprocess futures evaluated compute cluster via job scheduler.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsTemplateFutureBackend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batchtools futures for LSF, OpenLava, SGE, Slurm, TORQUE etc. — BatchtoolsTemplateFutureBackend","text":"","code":"BatchtoolsTemplateFutureBackend(   type,   scheduler.latency = 1,   fs.latency = 65,   resources = list(),   delete = getOption(\"future.batchtools.delete\", \"on-success\"),   template = NULL,   makeClusterFunctions = NULL,   workers = getOption(\"future.batchtools.workers\", default = 100L),   ... )"},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsTemplateFutureBackend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batchtools futures for LSF, OpenLava, SGE, Slurm, TORQUE etc. — BatchtoolsTemplateFutureBackend","text":"type (character string) Type job scheduler. scheduler.latency [numeric(1)] Time sleep important interactions scheduler ensure sane state. Currently triggered calling submitJobs. fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. resources (optional) named list passed batchtools job-script template variable resources. based batchtools::submitJobs() works, exception specially reserved names defined future.batchtools package; resources[[\"asis\"]] character vector passed -job script injected job resource declarations. resources[[\"modules\"]] character vector Linux environment modules loaded. resources[[\"startup\"]] resources[[\"shutdown\"]] character vectors shell code injected job script -. resources[[\"details\"]], TRUE, results job script outputting job details job summaries beginning end. remaining resources named elements injected named resource specification scheduler. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. template (optional) batchtools template file template string (brew format).  specified, left batchtools package locate file using search rules. workers maximum number workers batchtools backend may use time, HPC schedulers corresponds maximum number queued jobs. default getOption(\"future.batchtools.workers\", 100). ... Additional arguments passed BatchtoolsFutureBackend().","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsTemplateFutureBackend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batchtools futures for LSF, OpenLava, SGE, Slurm, TORQUE etc. — BatchtoolsTemplateFutureBackend","text":"object class BatchtoolsFutureBackend.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/BatchtoolsTemplateFutureBackend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Batchtools futures for LSF, OpenLava, SGE, Slurm, TORQUE etc. — BatchtoolsTemplateFutureBackend","text":"type batchtools futures rely batchtools backends set using following batchtools functions: batchtools::makeClusterFunctionsLSF() Load Sharing Facility (LSF) batchtools::makeClusterFunctionsOpenLava() OpenLava batchtools::makeClusterFunctionsSGE() Sun/Oracle Grid Engine (SGE) batchtools::makeClusterFunctionsSlurm() Slurm batchtools::makeClusterFunctionsTORQUE() TORQUE / PBS","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_bash.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools bash backend that resolves futures sequentially via a Bash template script — batchtools_bash","title":"A batchtools bash backend that resolves futures sequentially via a Bash template script — batchtools_bash","text":"batchtools_bash backend added illustrate write custom future.batchtools backend uses templated job script. Please see source code, details.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_bash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools bash backend that resolves futures sequentially via a Bash template script — batchtools_bash","text":"","code":"batchtools_bash(   ...,   template = \"bash\",   fs.latency = 0,   resources = list(),   delete = getOption(\"future.batchtools.delete\", \"on-success\") )  makeClusterFunctionsBash(template = \"bash\", fs.latency = 0, ...)"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_bash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools bash backend that resolves futures sequentially via a Bash template script — batchtools_bash","text":"template (optional) Name job-script template searched batchtools::findTemplateFile(). found, defaults templates/bash.tmpl part package (see ). fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. resources (optional) named list passed batchtools job-script template variable resources. based batchtools::submitJobs() works, exception specially reserved names defined future.batchtools package; resources[[\"asis\"]] character vector passed -job script injected job resource declarations. resources[[\"modules\"]] character vector Linux environment modules loaded. resources[[\"startup\"]] resources[[\"shutdown\"]] character vectors shell code injected job script -. resources[[\"details\"]], TRUE, results job script outputting job details job summaries beginning end. remaining resources named elements injected named resource specification scheduler. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_bash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A batchtools bash backend that resolves futures sequentially via a Bash template script — batchtools_bash","text":"makeClusterFunctionsBash() returns ClusterFunctions object.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_bash.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools bash backend that resolves futures sequentially via a Bash template script — batchtools_bash","text":"Batchtools bash futures use batchtools cluster functions created makeClusterFunctionsBash() requires bash installed current machine timeout command available. default template script templates/bash.tmpl can found :   comprise:","code":"system.file(\"templates\", \"bash.tmpl\", package = \"future.batchtools\") #!/bin/bash ###################################################################### # A batchtools launch script template # # Author: Henrik Bengtsson ######################################################################  ## Bash settings set -e          # exit on error set -u          # error on unset variables set -o pipefail # fail a pipeline if any command fails trap 'echo \"ERROR: future.batchtools job script failed on line $LINENO\" >&2; exit 1' ERR  ## Redirect stdout and stderr to the batchtools log file exec > <%= log.file %> 2>&1  <%   ## Maximum runtime?   runtime <- resources[[\"timeout\"]]   resources[[\"timeout\"]] <- NULL   timeout <- if (is.null(runtime)) \"\" else sprintf(\"timeout %s\", runtime)    ## Shell \"startup\" code to evaluate   startup <- resources[[\"startup\"]]   resources[[\"startup\"]] <- NULL    ## Shell \"shutdown\" code to evaluate   shutdown <- resources[[\"shutdown\"]]   resources[[\"shutdown\"]] <- NULL    ## Environment modules specifications   modules <- resources[[\"modules\"]]   resources[[\"modules\"]] <- NULL %>  <% if (length(startup) > 0) {   writeLines(startup) } %>  <% if (length(modules) > 0) {   writeLines(c(     'echo \"Load environment modules:\"',     sprintf('echo \"- modules: %s\"', paste(modules, collapse = \", \")),     sprintf(\"module load %s\", paste(modules, collapse = \" \")),     \"module list\"   )) } %>  echo \"Session information:\" echo \"- timestamp: $(date +\"%Y-%m-%d %H:%M:%S%z\")\" echo \"- hostname: $(hostname)\" echo \"- Rscript path: $(which Rscript)\" echo \"- Rscript version: $(Rscript --version)\" echo \"- Rscript library paths: $(Rscript -e \"cat(shQuote(.libPaths()), sep = ' ')\")\" echo  # Launch R and evaluate the batchtools R job echo \"Rscript -e 'batchtools::doJobCollection()' ...\" echo \"- job name: '<%= job.name %>'\" echo \"- job log file: '<%= log.file %>'\" echo \"- job uri: '<%= uri %>'\" <%= timeout %> Rscript -e 'batchtools::doJobCollection(\"<%= uri %>\")' res=$? echo \" - exit code: ${res}\" echo \"Rscript -e 'batchtools::doJobCollection()' ... done\" echo  <% if (length(shutdown) > 0) {   writeLines(shutdown) } %>  echo \"End time: $(date +\"%Y-%m-%d %H:%M:%S%z\")\"  ## Relay the exit code from Rscript exit \"${res}\""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_bash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A batchtools bash backend that resolves futures sequentially via a Bash template script — batchtools_bash","text":"","code":"if (FALSE) { # interactive() library(future)  # Limit runtime to 30 seconds per future plan(future.batchtools::batchtools_bash, resources = list(runtime = 30))  message(\"Main process ID: \", Sys.getpid())  f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),          pid = Sys.getpid(),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) }"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools backend that resolves futures sequentially in the current R session — batchtools_interactive","title":"A batchtools backend that resolves futures sequentially in the current R session — batchtools_interactive","text":"batchtools interactive backend useful verifying parts batchtools setup locally, still able interactive debugging.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools backend that resolves futures sequentially in the current R session — batchtools_interactive","text":"","code":"batchtools_interactive(   ...,   fs.latency = 0,   delete = getOption(\"future.batchtools.delete\", \"on-success\") )"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools backend that resolves futures sequentially in the current R session — batchtools_interactive","text":"fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_interactive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools backend that resolves futures sequentially in the current R session — batchtools_interactive","text":"Batchtools interactive futures use batchtools cluster functions created batchtools::makeClusterFunctionsInteractive() external = TRUE. alternative batchtools interactive backend use plan(future::sequential), faster way process futures sequentially also can debugged interactively.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A batchtools backend that resolves futures sequentially in the current R session — batchtools_interactive","text":"","code":"library(future) plan(future.batchtools::batchtools_interactive)  message(\"Main process ID: \", Sys.getpid()) #> Main process ID: 1009340  f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),          pid = Sys.getpid(),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) #>     hostname    os cores     pid #> 1 hb-x1-2025 Linux     8 1009340 #>                                                                                                                                                                                                    modules #> 1 CBI:r/4.5.1:bat/0.25.0:fzf/0.65.1:shellcheck/0.11.0:shellcheck-repl/0.4.4:restic/0.18.0:git-flow/1.12.3:git-extras/7.4.0:github-cli/2.76.2:port4me/0.7.1:pandoc/3.7.0.2:quarto/1.7.33:bash-startup/0.5.0"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_local.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools backend that resolves futures sequentially in transient background R sessions — batchtools_local","title":"A batchtools backend that resolves futures sequentially in transient background R sessions — batchtools_local","text":"batchtools local backend useful verifying parts batchtools setup locally, using advanced backend job-scheduler backends.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools backend that resolves futures sequentially in transient background R sessions — batchtools_local","text":"","code":"batchtools_local(   ...,   fs.latency = 0,   delete = getOption(\"future.batchtools.delete\", \"on-success\") )"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools backend that resolves futures sequentially in transient background R sessions — batchtools_local","text":"fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_local.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools backend that resolves futures sequentially in transient background R sessions — batchtools_local","text":"Batchtools local futures use batchtools cluster functions created batchtools::makeClusterFunctionsInteractive() external = TRUE. alternative batchtools interactive backend use plan(future::cluster, workers = (1)).","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_local.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A batchtools backend that resolves futures sequentially in transient background R sessions — batchtools_local","text":"","code":"library(future) plan(future.batchtools::batchtools_local)  message(\"Main process ID: \", Sys.getpid()) #> Main process ID: 1009340  f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),          pid = Sys.getpid(),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) #>     hostname    os cores     pid #> 1 hb-x1-2025 Linux     8 1009724 #>                                                                                                                                                                                                    modules #> 1 CBI:r/4.5.1:bat/0.25.0:fzf/0.65.1:shellcheck/0.11.0:shellcheck-repl/0.4.4:restic/0.18.0:git-flow/1.12.3:git-extras/7.4.0:github-cli/2.76.2:port4me/0.7.1:pandoc/3.7.0.2:quarto/1.7.33:bash-startup/0.5.0"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_lsf.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools LSF backend resolves futures in parallel via a Load Sharing Facility (LSF) job scheduler — batchtools_lsf","title":"A batchtools LSF backend resolves futures in parallel via a Load Sharing Facility (LSF) job scheduler — batchtools_lsf","text":"batchtools LSF backend resolves futures parallel via Load Sharing Facility (LSF) job scheduler","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_lsf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools LSF backend resolves futures in parallel via a Load Sharing Facility (LSF) job scheduler — batchtools_lsf","text":"","code":"batchtools_lsf(   ...,   template = \"lsf\",   scheduler.latency = 1,   fs.latency = 65,   resources = list(),   delete = getOption(\"future.batchtools.delete\", \"on-success\"),   workers = getOption(\"future.batchtools.workers\", default = 100L) )"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_lsf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools LSF backend resolves futures in parallel via a Load Sharing Facility (LSF) job scheduler — batchtools_lsf","text":"template (optional) Name job-script template searched batchtools::findTemplateFile(). found, defaults templates/lsf.tmpl part package (see ). scheduler.latency [numeric(1)] Time sleep important interactions scheduler ensure sane state. Currently triggered calling submitJobs. fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. resources (optional) named list passed batchtools job-script template variable resources. based batchtools::submitJobs() works, exception specially reserved names defined future.batchtools package; resources[[\"asis\"]] character vector passed -job script injected job resource declarations. resources[[\"modules\"]] character vector Linux environment modules loaded. resources[[\"startup\"]] resources[[\"shutdown\"]] character vectors shell code injected job script -. resources[[\"details\"]], TRUE, results job script outputting job details job summaries beginning end. remaining resources named elements injected named resource specification scheduler. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. workers maximum number workers batchtools backend may use time, HPC schedulers corresponds maximum number queued jobs. default getOption(\"future.batchtools.workers\", 100). ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_lsf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools LSF backend resolves futures in parallel via a Load Sharing Facility (LSF) job scheduler — batchtools_lsf","text":"Batchtools Load Sharing Facility (LSF) futures use batchtools cluster functions created batchtools::makeClusterFunctionsLSF(), used interact LSF job scheduler. requires LSF commands bsub, bjobs, bkill available current machine. default template script templates/lsf.tmpl can found :   comprise:","code":"system.file(\"templates\", \"lsf.tmpl\", package = \"future.batchtools\") #!/bin/bash ###################################################################### # A batchtools launch script template for LSF # # Author: Henrik Bengtsson ######################################################################  ## Job name #BSUB -J <%= job.name %>  ## Direct streams to logfile #BSUB -o <%= log.file %>  ## Resources needed <%   ## Should scheduler \"details\" be seen?   details <- isTRUE(resources[[\"details\"]])   resources[[\"details\"]] <- NULL    ## Shell \"startup\" code to evaluate   startup <- resources[[\"startup\"]]   resources[[\"startup\"]] <- NULL    ## Shell \"shutdown\" code to evaluate   shutdown <- resources[[\"shutdown\"]]   resources[[\"shutdown\"]] <- NULL    ## Environment modules specifications   modules <- resources[[\"modules\"]]   resources[[\"modules\"]] <- NULL    ## As-is resource specifications   job_declarations <- resources[[\"asis\"]]   resources[[\"asis\"]] <- NULL    ## Remaining resources are assumed to be of type '-<key>=<value>'   opts <- unlist(resources, use.names = TRUE)   opts <- sprintf(\"-%s=%s\", names(opts), opts)   job_declarations <- sprintf(\"#BSUB %s\", c(job_declarations, opts))   writeLines(job_declarations) %>  ## Bash settings set -e          # exit on error set -u          # error on unset variables set -o pipefail # fail a pipeline if any command fails trap 'echo \"ERROR: future.batchtools job script failed on line $LINENO\" >&2; exit 1' ERR  <% if (length(job_declarations) > 0) {   writeLines(c(     \"echo 'Job submission declarations:'\",     sprintf(\"echo '%s'\", job_declarations),     \"echo\"   )) } %>  <% if (details) { %> if command -v bjobs > /dev/null; then   echo \"Job information:\"   bjobs -l \"${LSB_JOBID}\"   echo fi <% } %>  <% if (length(startup) > 0) {   writeLines(startup) } %>  <% if (length(modules) > 0) {   writeLines(c(     \"echo 'Load environment modules:'\",     sprintf(\"echo '- modules: %s'\", paste(modules, collapse = \", \")),     sprintf(\"module load %s\", paste(modules, collapse = \" \")),     \"module list\"   )) } %>  echo \"Session information:\" echo \"- timestamp: $(date +\"%Y-%m-%d %H:%M:%S%z\")\" echo \"- hostname: $(hostname)\" echo \"- Rscript path: $(which Rscript)\" echo \"- Rscript version: $(Rscript --version)\" echo \"- Rscript library paths: $(Rscript -e \"cat(shQuote(.libPaths()), sep = ' ')\")\" echo   ## Launch R and evaluate the batchtools R job echo \"Rscript -e 'batchtools::doJobCollection()' ...\" echo \"- job name: '<%= job.name %>'\" echo \"- job log file: '<%= log.file %>'\" echo \"- job uri: '<%= uri %>'\" Rscript -e 'batchtools::doJobCollection(\"<%= uri %>\")' res=$? echo \" - exit code: ${res}\" echo \"Rscript -e 'batchtools::doJobCollection()' ... done\" echo  <% if (details) { %> if command -v bjobs > /dev/null; then   echo \"Job summary:\"   bjobs -l \"${LSB_JOBID}\" fi <% } %>  <% if (length(shutdown) > 0) {   writeLines(shutdown) } %>  echo \"End time: $(date +\"%Y-%m-%d %H:%M:%S%z\")\"  ## Relay the exit code from Rscript exit \"${res}\""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_lsf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A batchtools LSF backend resolves futures in parallel via a Load Sharing Facility (LSF) job scheduler — batchtools_lsf","text":"https://en.wikipedia.org/wiki/IBM_Spectrum_LSF","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_lsf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A batchtools LSF backend resolves futures in parallel via a Load Sharing Facility (LSF) job scheduler — batchtools_lsf","text":"","code":"if (FALSE) { # interactive() library(future)  # Limit runtime to 10 minutes and total memory to 400 MiB per future, # request a parallel environment with four slots on a single host. # Submit to the 'freecycle' queue. Load environment modules 'r' and # 'jags'. Report on job details at startup and at the end of the job. plan(future.batchtools::batchtools_lsf, resources = list(   W = \"00:10:00\", M = \"400\",   asis = c(\"-n 4\", \"-R 'span[hosts=1]'\", \"-q freecycle\"),   modules = c(\"r\", \"jags\"),   details = TRUE ))  f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) }"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_multicore.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools backend that resolves futures in parallel via forked background R processes — batchtools_multicore","title":"A batchtools backend that resolves futures in parallel via forked background R processes — batchtools_multicore","text":"batchtools backend resolves futures parallel via forked background R processes","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_multicore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools backend that resolves futures in parallel via forked background R processes — batchtools_multicore","text":"","code":"batchtools_multicore(   ...,   workers = availableCores(constraints = \"multicore\"),   fs.latency = 0,   delete = getOption(\"future.batchtools.delete\", \"on-success\") )"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_multicore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools backend that resolves futures in parallel via forked background R processes — batchtools_multicore","text":"workers number multicore processes available concurrent batchtools multicore futures. fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_multicore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools backend that resolves futures in parallel via forked background R processes — batchtools_multicore","text":"Batchtools multicore futures use batchtools cluster functions created batchtools::makeClusterFunctionsMulticore() ncpus = workers. alternative batchtools multicore backend use plan(future::multicore).","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_multicore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A batchtools backend that resolves futures in parallel via forked background R processes — batchtools_multicore","text":"","code":"if (FALSE) { # interactive() library(future) plan(future.batchtools::batchtools_multicore, workers = 2)  message(\"Main process ID: \", Sys.getpid())  f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),          pid = Sys.getpid(),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) }"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_openlava.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools openlava backend resolves futures in parallel via a OpenLava job scheduler — batchtools_openlava","title":"A batchtools openlava backend resolves futures in parallel via a OpenLava job scheduler — batchtools_openlava","text":"batchtools openlava backend resolves futures parallel via OpenLava job scheduler","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_openlava.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools openlava backend resolves futures in parallel via a OpenLava job scheduler — batchtools_openlava","text":"","code":"batchtools_openlava(   ...,   template = \"openlava\",   scheduler.latency = 1,   fs.latency = 65,   resources = list(),   delete = getOption(\"future.batchtools.delete\", \"on-success\"),   workers = getOption(\"future.batchtools.workers\", default = 100L) )"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_openlava.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools openlava backend resolves futures in parallel via a OpenLava job scheduler — batchtools_openlava","text":"template (optional) Name job-script template searched batchtools::findTemplateFile(). found, defaults templates/openlava.tmpl part package (see ). scheduler.latency [numeric(1)] Time sleep important interactions scheduler ensure sane state. Currently triggered calling submitJobs. fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. resources (optional) named list passed batchtools job-script template variable resources. based batchtools::submitJobs() works, exception specially reserved names defined future.batchtools package; resources[[\"asis\"]] character vector passed -job script injected job resource declarations. resources[[\"modules\"]] character vector Linux environment modules loaded. resources[[\"startup\"]] resources[[\"shutdown\"]] character vectors shell code injected job script -. resources[[\"details\"]], TRUE, results job script outputting job details job summaries beginning end. remaining resources named elements injected named resource specification scheduler. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. workers maximum number workers batchtools backend may use time, HPC schedulers corresponds maximum number queued jobs. default getOption(\"future.batchtools.workers\", 100). ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_openlava.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools openlava backend resolves futures in parallel via a OpenLava job scheduler — batchtools_openlava","text":"Batchtools OpenLava futures use batchtools cluster functions created batchtools::makeClusterFunctionsOpenLava(), used interact OpenLava job scheduler. requires OpenLava commands bsub, bjobs, bkill available current machine. default template script templates/openlava.tmpl can found :   comprise:","code":"system.file(\"templates\", \"openlava.tmpl\", package = \"future.batchtools\") #!/bin/bash ###################################################################### # A batchtools launch script template for OpenLava # # Author: Henrik Bengtsson ######################################################################  ## Job name #BSUB -J <%= job.name %>  ## Direct streams to logfile #BSUB -o <%= log.file %>  ## Resources needed <%   ## Should scheduler \"details\" be seen?   details <- isTRUE(resources[[\"details\"]])   resources[[\"details\"]] <- NULL    ## Shell \"startup\" code to evaluate   startup <- resources[[\"startup\"]]   resources[[\"startup\"]] <- NULL    ## Shell \"shutdown\" code to evaluate   shutdown <- resources[[\"shutdown\"]]   resources[[\"shutdown\"]] <- NULL    ## Environment modules specifications   modules <- resources[[\"modules\"]]   resources[[\"modules\"]] <- NULL    ## As-is resource specifications   job_declarations <- resources[[\"asis\"]]   resources[[\"asis\"]] <- NULL    ## Remaining resources are assumed to be of type '-<key>=<value>'   opts <- unlist(resources, use.names = TRUE)   opts <- sprintf(\"-%s=%s\", names(opts), opts)   job_declarations <- sprintf(\"#BSUB %s\", c(job_declarations, opts))   writeLines(job_declarations) %>  ## Bash settings set -e          # exit on error set -u          # error on unset variables set -o pipefail # fail a pipeline if any command fails trap 'echo \"ERROR: future.batchtools job script failed on line $LINENO\" >&2; exit 1' ERR  <% if (length(job_declarations) > 0) {   writeLines(c(     \"echo 'Job submission declarations:'\",     sprintf(\"echo '%s'\", job_declarations),     \"echo\"   )) } %>  <% if (details) { %> if command -v bjobs > /dev/null; then   echo \"Job information:\"   bjobs -l \"${LSB_JOBID}\"   echo fi <% } %>  <% if (length(startup) > 0) {   writeLines(startup) } %>  <% if (length(modules) > 0) {   writeLines(c(     \"echo 'Load environment modules:'\",     sprintf(\"echo '- modules: %s'\", paste(modules, collapse = \", \")),     sprintf(\"module load %s\", paste(modules, collapse = \" \")),     \"module list\"   )) } %>  echo \"Session information:\" echo \"- timestamp: $(date +\"%Y-%m-%d %H:%M:%S%z\")\" echo \"- hostname: $(hostname)\" echo \"- Rscript path: $(which Rscript)\" echo \"- Rscript version: $(Rscript --version)\" echo \"- Rscript library paths: $(Rscript -e \"cat(shQuote(.libPaths()), sep = ' ')\")\" echo   ## Launch R and evaluate the batchtools R job echo \"Rscript -e 'batchtools::doJobCollection()' ...\" echo \"- job name: '<%= job.name %>'\" echo \"- job log file: '<%= log.file %>'\" echo \"- job uri: '<%= uri %>'\" Rscript -e 'batchtools::doJobCollection(\"<%= uri %>\")' res=$? echo \" - exit code: ${res}\" echo \"Rscript -e 'batchtools::doJobCollection()' ... done\" echo  <% if (details) { %> if command -v bjobs > /dev/null; then   echo \"Job summary:\"   bjobs -l \"${LSB_JOBID}\" fi <% } %>  <% if (length(shutdown) > 0) {   writeLines(shutdown) } %>  echo \"End time: $(date +\"%Y-%m-%d %H:%M:%S%z\")\"  ## Relay the exit code from Rscript exit \"${res}\""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_openlava.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A batchtools openlava backend resolves futures in parallel via a OpenLava job scheduler — batchtools_openlava","text":"https://en.wikipedia.org/wiki/OpenLava","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_openlava.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A batchtools openlava backend resolves futures in parallel via a OpenLava job scheduler — batchtools_openlava","text":"","code":"if (FALSE) { # interactive() library(future)  # Limit runtime to 10 minutes and total memory to 400 MiB per future, # request a parallel environment with four slots on a single host. # Submit to the 'freecycle' queue. Load environment modules 'r' and # 'jags'. Report on job details at startup and at the end of the job. plan(future.batchtools::batchtools_openlava, resources = list(   W = \"00:10:00\", M = \"400\",   asis = c(\"-n 4\", \"-R 'span[hosts=1]'\", \"-q freecycle\"),   modules = c(\"r\", \"jags\"),   details = TRUE ))  f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) }"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_sge.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools SGE backend resolves futures in parallel via a Sun/Son of/Oracle/Univa/Altair Grid Engine job scheduler — batchtools_sge","title":"A batchtools SGE backend resolves futures in parallel via a Sun/Son of/Oracle/Univa/Altair Grid Engine job scheduler — batchtools_sge","text":"batchtools SGE backend resolves futures parallel via Sun/Son /Oracle/Univa/Altair Grid Engine job scheduler","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_sge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools SGE backend resolves futures in parallel via a Sun/Son of/Oracle/Univa/Altair Grid Engine job scheduler — batchtools_sge","text":"","code":"batchtools_sge(   ...,   template = \"sge\",   scheduler.latency = 1,   fs.latency = 65,   resources = list(),   delete = getOption(\"future.batchtools.delete\", \"on-success\"),   workers = getOption(\"future.batchtools.workers\", default = 100L) )"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_sge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools SGE backend resolves futures in parallel via a Sun/Son of/Oracle/Univa/Altair Grid Engine job scheduler — batchtools_sge","text":"template (optional) Name job-script template searched batchtools::findTemplateFile(). found, defaults templates/sge.tmpl part package (see ). scheduler.latency [numeric(1)] Time sleep important interactions scheduler ensure sane state. Currently triggered calling submitJobs. fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. resources (optional) named list passed batchtools job-script template variable resources. based batchtools::submitJobs() works, exception specially reserved names defined future.batchtools package; resources[[\"asis\"]] character vector passed -job script injected job resource declarations. resources[[\"modules\"]] character vector Linux environment modules loaded. resources[[\"startup\"]] resources[[\"shutdown\"]] character vectors shell code injected job script -. resources[[\"details\"]], TRUE, results job script outputting job details job summaries beginning end. remaining resources named elements injected named resource specification scheduler. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. workers maximum number workers batchtools backend may use time, HPC schedulers corresponds maximum number queued jobs. default getOption(\"future.batchtools.workers\", 100). ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_sge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools SGE backend resolves futures in parallel via a Sun/Son of/Oracle/Univa/Altair Grid Engine job scheduler — batchtools_sge","text":"Batchtools SGE futures use batchtools cluster functions created batchtools::makeClusterFunctionsSGE(), used interact SGE job scheduler. requires SGE commands qsub, qstat, qdel available current machine. default template script templates/sge.tmpl can found :   comprise:   template built-batchtools::makeClusterFunctionsSGE() verified work different Grid Engine HPC clusters; SGE 8.1.9 (Son Grid Engine), Rocky 8 Linux, BeeGFS global filesystem (August 2025) AGE 2024.1.0 (8.9.0), Rocky 9 Linux, NSF global filesystem (August 2025)","code":"system.file(\"templates\", \"sge.tmpl\", package = \"future.batchtools\") #!/bin/bash ###################################################################### # A batchtools launch script template for SGE # # Author: Henrik Bengtsson ###################################################################### ## Shell #$ -S /bin/bash  ## Job name #$ -N <%= job.name %>  ## Direct streams to logfile #$ -o <%= log.file %>  ## Merge standard error and output #$ -j y  ## Tell the queue system to use the current directory ## as the working directory #$ -cwd  ## Resources needed: <%   ## Should scheduler \"details\" be seen?   details <- isTRUE(resources[[\"details\"]])   resources[[\"details\"]] <- NULL    ## Shell \"startup\" code to evaluate   startup <- resources[[\"startup\"]]   resources[[\"startup\"]] <- NULL    ## Shell \"shutdown\" code to evaluate   shutdown <- resources[[\"shutdown\"]]   resources[[\"shutdown\"]] <- NULL    ## Environment modules specifications   modules <- resources[[\"modules\"]]   resources[[\"modules\"]] <- NULL    ## As-is resource specifications   job_declarations <- resources[[\"asis\"]]   resources[[\"asis\"]] <- NULL    ## Remaining resources are assumed to be of type '-l <key>=<value>'   opts <- unlist(resources, use.names = TRUE)   opts <- sprintf(\"-l %s=%s\", names(opts), opts)   job_declarations <- sprintf(\"#$ %s\", c(job_declarations, opts))   writeLines(job_declarations) %>  ## Bash settings set -e          # exit on error set -u          # error on unset variables set -o pipefail # fail a pipeline if any command fails trap 'echo \"ERROR: future.batchtools job script failed on line $LINENO\" >&2; exit 1' ERR  <% if (length(job_declarations) > 0) {   writeLines(c(     \"echo 'Job submission declarations:'\",     sprintf(\"echo '%s'\", job_declarations),     \"echo\"   )) } %>  <% if (details) { %> if command -v qstat > /dev/null; then   echo \"Job information:\"   qstat -j \"${JOB_ID}\"   echo fi <% } %>  <% if (length(startup) > 0) {   writeLines(startup) } %>  <% if (length(modules) > 0) {   writeLines(c(     \"echo 'Load environment modules:'\",     sprintf(\"echo '- modules: %s'\", paste(modules, collapse = \", \")),     sprintf(\"module load %s\", paste(modules, collapse = \" \")),     \"module list\"   )) } %>  echo \"Session information:\" echo \"- timestamp: $(date +\"%Y-%m-%d %H:%M:%S%z\")\" echo \"- hostname: $(hostname)\" echo \"- Rscript path: $(which Rscript)\" echo \"- Rscript version: $(Rscript --version)\" echo \"- Rscript library paths: $(Rscript -e \"cat(shQuote(.libPaths()), sep = ' ')\")\" echo   ## Launch R and evaluate the batchtools R job echo \"Rscript -e 'batchtools::doJobCollection()' ...\" echo \"- job name: '<%= job.name %>'\" echo \"- job log file: '<%= log.file %>'\" echo \"- job uri: '<%= uri %>'\" Rscript -e 'batchtools::doJobCollection(\"<%= uri %>\")' res=$? echo \" - exit code: ${res}\" echo \"Rscript -e 'batchtools::doJobCollection()' ... done\" echo  <% if (details) { %> if command -v qstat > /dev/null; then   echo \"Job summary:\"   qstat -j \"${JOB_ID}\" fi <% } %>  <% if (length(shutdown) > 0) {   writeLines(shutdown) } %>  echo \"End time: $(date +\"%Y-%m-%d %H:%M:%S%z\")\"  ## Relay the exit code from Rscript exit \"${res}\""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_sge.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A batchtools SGE backend resolves futures in parallel via a Sun/Son of/Oracle/Univa/Altair Grid Engine job scheduler — batchtools_sge","text":"https://en.wikipedia.org/wiki/Oracle_Grid_Engine","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_sge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A batchtools SGE backend resolves futures in parallel via a Sun/Son of/Oracle/Univa/Altair Grid Engine job scheduler — batchtools_sge","text":"","code":"if (FALSE) { # interactive() library(future)  # Limit runtime to 10 minutes and memory to 400 MiB per future, # request a parallel environment with four slots on a single host. # Submit to the 'freecycle' queue. Load environment modules 'r' and # 'jags'. Report on job details at startup and at the end of the job. plan(future.batchtools::batchtools_sge, resources = list(   h_rt = \"00:10:00\", mem_free = \"100M\",  ## memory is per process   asis = c(\"-pe smp 4\", \"-q freecycle.q\"),   modules = c(\"r\", \"jags\"),   details = TRUE ))  f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) }"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_slurm.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools slurm backend resolves futures in parallel via a Slurm job scheduler — batchtools_slurm","title":"A batchtools slurm backend resolves futures in parallel via a Slurm job scheduler — batchtools_slurm","text":"batchtools slurm backend resolves futures parallel via Slurm job scheduler","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_slurm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools slurm backend resolves futures in parallel via a Slurm job scheduler — batchtools_slurm","text":"","code":"batchtools_slurm(   ...,   template = \"slurm\",   scheduler.latency = 1,   fs.latency = 65,   resources = list(),   delete = getOption(\"future.batchtools.delete\", \"on-success\"),   workers = getOption(\"future.batchtools.workers\", default = 100L) )"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_slurm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools slurm backend resolves futures in parallel via a Slurm job scheduler — batchtools_slurm","text":"template (optional) Name job-script template searched batchtools::findTemplateFile(). found, defaults templates/slurm.tmpl part package (see ). scheduler.latency [numeric(1)] Time sleep important interactions scheduler ensure sane state. Currently triggered calling submitJobs. fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. resources (optional) named list passed batchtools job-script template variable resources. based batchtools::submitJobs() works, exception specially reserved names defined future.batchtools package; resources[[\"asis\"]] character vector passed -job script injected job resource declarations. resources[[\"modules\"]] character vector Linux environment modules loaded. resources[[\"startup\"]] resources[[\"shutdown\"]] character vectors shell code injected job script -. resources[[\"details\"]], TRUE, results job script outputting job details job summaries beginning end. remaining resources named elements injected named resource specification scheduler. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. workers maximum number workers batchtools backend may use time, HPC schedulers corresponds maximum number queued jobs. default getOption(\"future.batchtools.workers\", 100). ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_slurm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools slurm backend resolves futures in parallel via a Slurm job scheduler — batchtools_slurm","text":"Batchtools slurm futures use batchtools cluster functions created batchtools::makeClusterFunctionsSlurm(), used interact Slurm job scheduler. requires Slurm commands sbatch, squeue, scancel available current machine. default template script templates/slurm.tmpl can found :   comprise:   template built-batchtools::makeClusterFunctionsSlurm() verified work different Slurm HPC clusters; Slurm 21.08.4, Rocky 8 Linux, NFS global filesystem (August 2025) Slurm 22.05.11, Rocky 8 Linux, NFS global filesystem (August 2025) Slurm 23.02.6, Ubuntu 24.04 LTS, NFS global filesystem (August 2025)","code":"system.file(\"templates\", \"slurm.tmpl\", package = \"future.batchtools\") #!/bin/bash ###################################################################### # A batchtools launch script template for Slurm # # Author: Henrik Bengtsson ######################################################################  ## Job name #SBATCH --job-name=<%= job.name %> ## Direct streams to logfile #SBATCH --output=<%= log.file %>  ## Resources needed: <%   ## Shell \"details\" code to evaluate   details <- isTRUE(resources[[\"details\"]])   resources[[\"details\"]] <- NULL    ## Shell \"startup\" code to evaluate   startup <- resources[[\"startup\"]]   resources[[\"startup\"]] <- NULL    ## Shell \"shutdown\" code to evaluate   shutdown <- resources[[\"shutdown\"]]   resources[[\"shutdown\"]] <- NULL    ## Environment modules specifications   modules <- resources[[\"modules\"]]   resources[[\"modules\"]] <- NULL    ## As-is resource specifications   job_declarations <- resources[[\"asis\"]]   resources[[\"asis\"]] <- NULL    ## Remaining resources are assumed to be of type '--<key>=<value>'   opts <- unlist(resources, use.names = TRUE)   opts <- sprintf(\"--%s=%s\", names(opts), opts)   job_declarations <- sprintf(\"#SBATCH %s\", c(job_declarations, opts))   writeLines(job_declarations) %>  ## Bash settings set -e          # exit on error set -u          # error on unset variables set -o pipefail # fail a pipeline if any command fails trap 'echo \"ERROR: future.batchtools job script failed on line $LINENO\" >&2; exit 1' ERR  <% if (length(job_declarations) > 0) {   writeLines(c(     \"echo 'Job submission declarations:'\",     sprintf(\"echo '%s'\", job_declarations),     \"echo\"   )) } %>  <% if (details) { %> if command -v scontrol > /dev/null; then   echo \"Job information:\"   scontrol show job \"${SLURM_JOB_ID}\"   echo fi <% } %>  <% if (length(startup) > 0) {   writeLines(startup) } %>  <% if (length(modules) > 0) {   writeLines(c(     \"echo 'Load environment modules:'\",     sprintf(\"echo '- modules: %s'\", paste(modules, collapse = \", \")),     sprintf(\"module load %s\", paste(modules, collapse = \" \")),     \"module list\"   )) } %>  echo \"Session information:\" echo \"- timestamp: $(date +\"%Y-%m-%d %H:%M:%S%z\")\" echo \"- hostname: $(hostname)\" echo \"- Rscript path: $(which Rscript)\" echo \"- Rscript version: $(Rscript --version)\" echo \"- Rscript library paths: $(Rscript -e \"cat(shQuote(.libPaths()), sep = ' ')\")\" echo  ## Launch R and evaluate the batchtools R job echo \"Rscript -e 'batchtools::doJobCollection()' ...\" echo \"- job name: '<%= job.name %>'\" echo \"- job log file: '<%= log.file %>'\" echo \"- job uri: '<%= uri %>'\" Rscript -e 'batchtools::doJobCollection(\"<%= uri %>\")' res=$? echo \" - exit code: ${res}\" echo \"Rscript -e 'batchtools::doJobCollection()' ... done\" echo  <% if (details) { %> if command -v sstat > /dev/null; then   echo \"Job summary:\"   sstat --format=\"JobID,AveCPU,MaxRSS,MaxPages,MaxDiskRead,MaxDiskWrite\" --allsteps --jobs=\"${SLURM_JOB_ID}\" fi <% } %>  <% if (length(shutdown) > 0) {   writeLines(shutdown) } %>  echo \"End time: $(date +\"%Y-%m-%d %H:%M:%S%z\")\"  ## Relay the exit code from Rscript exit \"${res}\""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_slurm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A batchtools slurm backend resolves futures in parallel via a Slurm job scheduler — batchtools_slurm","text":"https://en.wikipedia.org/wiki/Slurm_Workload_Manager","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_slurm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A batchtools slurm backend resolves futures in parallel via a Slurm job scheduler — batchtools_slurm","text":"","code":"if (FALSE) { # interactive() library(future)  # Limit runtime to 10 minutes and memory to 400 MiB per future, # request a parallel environment with four slots on a single host. # Submit to the 'freecycle' partition. Load environment modules 'r' and # 'jags'. Report on job details at startup and at the end of the job. plan(future.batchtools::batchtools_slurm, resources = list(   time = \"00:10:00\", mem = \"400M\",   asis = c(\"--nodes=1\", \"--ntasks=4\", \"--partition=freecycle\"),   modules = c(\"r\", \"jags\"),   details = TRUE ))  f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores()),      modules = Sys.getenv(\"LOADEDMODULES\")   ) }) info <- value(f) print(info) }"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_ssh.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools backend that resolves futures in parallel via background R sessions over SSH — batchtools_ssh","title":"A batchtools backend that resolves futures in parallel via background R sessions over SSH — batchtools_ssh","text":"batchtools backend resolves futures parallel via background R sessions SSH","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_ssh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools backend that resolves futures in parallel via background R sessions over SSH — batchtools_ssh","text":"","code":"batchtools_ssh(   ...,   workers = availableWorkers(),   fs.latency = 65,   delete = getOption(\"future.batchtools.delete\", \"on-success\") )"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_ssh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools backend that resolves futures in parallel via background R sessions over SSH — batchtools_ssh","text":"workers (optional) maximum number workers batchtools backend may use time.   Interactive \"local\" backends can process one future time (workers = 1), whereas HPC backends, futures resolved via separate jobs scheduler, can multiple workers. latter, default workers = NULL, resolve getOption(\"future.batchtools.workers\", 100). fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_ssh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools backend that resolves futures in parallel via background R sessions over SSH — batchtools_ssh","text":"batchtools_ssh backend uses batchtools backend set batchtools::makeClusterFunctionsSSH(), requires system commands ssh ps available Linux macOS. alternative batchtools_ssh use cluster futures future package single local background session, .e. plan(cluster, workers = c(\"localhost\")).","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_torque.html","id":null,"dir":"Reference","previous_headings":"","what":"A batchtools TORQUE backend resolves futures in parallel via a TORQUE/PBS job scheduler — batchtools_torque","title":"A batchtools TORQUE backend resolves futures in parallel via a TORQUE/PBS job scheduler — batchtools_torque","text":"batchtools TORQUE backend resolves futures parallel via TORQUE/PBS job scheduler","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_torque.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A batchtools TORQUE backend resolves futures in parallel via a TORQUE/PBS job scheduler — batchtools_torque","text":"","code":"batchtools_torque(   ...,   template = \"torque\",   scheduler.latency = 1,   fs.latency = 65,   resources = list(),   delete = getOption(\"future.batchtools.delete\", \"on-success\"),   workers = getOption(\"future.batchtools.workers\", default = 100L) )"},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_torque.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A batchtools TORQUE backend resolves futures in parallel via a TORQUE/PBS job scheduler — batchtools_torque","text":"template (optional) Name job-script template searched batchtools::findTemplateFile(). found, defaults templates/torque.tmpl part package (see ). scheduler.latency [numeric(1)] Time sleep important interactions scheduler ensure sane state. Currently triggered calling submitJobs. fs.latency [numeric(1)] Expected maximum latency file system, seconds. Set positive number network file systems like NFS enables robust (also expensive) mechanisms access files directories. Usually safe set 0 disable heuristic, e.g. working local file system. resources (optional) named list passed batchtools job-script template variable resources. based batchtools::submitJobs() works, exception specially reserved names defined future.batchtools package; resources[[\"asis\"]] character vector passed -job script injected job resource declarations. resources[[\"modules\"]] character vector Linux environment modules loaded. resources[[\"startup\"]] resources[[\"shutdown\"]] character vectors shell code injected job script -. resources[[\"details\"]], TRUE, results job script outputting job details job summaries beginning end. remaining resources named elements injected named resource specification scheduler. delete Controls batchtools job registry folder deleted. \"-success\" (default), deleted future resolved successfully expression produce error. \"never\", never deleted. \"always\", always deleted. workers maximum number workers batchtools backend may use time, HPC schedulers corresponds maximum number queued jobs. default getOption(\"future.batchtools.workers\", 100). ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_torque.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A batchtools TORQUE backend resolves futures in parallel via a TORQUE/PBS job scheduler — batchtools_torque","text":"Batchtools TORQUE/PBS futures use batchtools cluster functions created batchtools::makeClusterFunctionsTORQUE(), used interact TORQUE/PBS job scheduler. requires TORQUE/PBS commands qsub, qselect, qdel available current machine. default template script templates/torque.tmpl can found :   comprise:","code":"system.file(\"templates\", \"torque.tmpl\", package = \"future.batchtools\") #!/bin/bash ###################################################################### # A batchtools launch script template for TORQUE/PBS # # Author: Henrik Bengtsson ######################################################################  ## Job name #PBS -N <%= job.name %>  ## Direct streams to logfile #PBS -o <%= log.file %>  ## Merge standard error and output #PBS -j oe  ## Resources needed: <%   ## Should scheduler \"details\" be seen?   details <- isTRUE(resources[[\"details\"]])   resources[[\"details\"]] <- NULL    ## Shell \"startup\" code to evaluate   startup <- resources[[\"startup\"]]   resources[[\"startup\"]] <- NULL    ## Shell \"shutdown\" code to evaluate   shutdown <- resources[[\"shutdown\"]]   resources[[\"shutdown\"]] <- NULL    ## Environment modules specifications   modules <- resources[[\"modules\"]]   resources[[\"modules\"]] <- NULL    ## As-is resource specifications   job_declarations <- resources[[\"asis\"]]   resources[[\"asis\"]] <- NULL    ## Remaining resources are assumed to be of type '-l <key>=<value>'   opts <- unlist(resources, use.names = TRUE)   opts <- sprintf(\"-l %s=%s\", names(opts), opts)   job_declarations <- sprintf(\"#PBS %s\", c(job_declarations, opts))   writeLines(job_declarations) %>  ## Bash settings set -e          # exit on error set -u          # error on unset variables set -o pipefail # fail a pipeline if any command fails trap 'echo \"ERROR: future.batchtools job script failed on line $LINENO\" >&2; exit 1' ERR  <% if (length(job_declarations) > 0) {   writeLines(c(     \"echo 'Job submission declarations:'\",     sprintf(\"echo '%s'\", job_declarations),     \"echo\"   )) } %>  <% if (details) { %> if command -v qstat > /dev/null; then   echo \"Job information:\"   qstat -f \"${PBS_JOBID}\"   echo fi <% } %>  <% if (length(startup) > 0) {   writeLines(startup) } %>  <% if (length(modules) > 0) {   writeLines(c(     \"echo 'Load environment modules:'\",     sprintf(\"echo '- modules: %s'\", paste(modules, collapse = \", \")),     sprintf(\"module load %s\", paste(modules, collapse = \" \")),     \"module list\"   )) } %>  echo \"Session information:\" echo \"- timestamp: $(date +\"%Y-%m-%d %H:%M:%S%z\")\" echo \"- hostname: $(hostname)\" echo \"- Rscript path: $(which Rscript)\" echo \"- Rscript version: $(Rscript --version)\" echo \"- Rscript library paths: $(Rscript -e \"cat(shQuote(.libPaths()), sep = ' ')\")\" echo  ## Launch R and evaluate the batchtools R job echo \"Rscript -e 'batchtools::doJobCollection()' ...\" echo \"- job name: '<%= job.name %>'\" echo \"- job log file: '<%= log.file %>'\" echo \"- job uri: '<%= uri %>'\" Rscript -e 'batchtools::doJobCollection(\"<%= uri %>\")' res=$? echo \" - exit code: ${res}\" echo \"Rscript -e 'batchtools::doJobCollection()' ... done\" echo  <% if (details) { %> if command -v qstat > /dev/null; then   echo \"Job summary:\"   qstat -f \"${PBS_JOBID}\" fi <% } %>  <% if (length(shutdown) > 0) {   writeLines(shutdown) } %>  echo \"End time: $(date +\"%Y-%m-%d %H:%M:%S%z\")\"  ## Relay the exit code from Rscript exit \"${res}\""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_torque.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A batchtools TORQUE backend resolves futures in parallel via a TORQUE/PBS job scheduler — batchtools_torque","text":"https://en.wikipedia.org/wiki/TORQUE","code":""},{"path":"https://future.batchtools.futureverse.org/reference/batchtools_torque.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A batchtools TORQUE backend resolves futures in parallel via a TORQUE/PBS job scheduler — batchtools_torque","text":"","code":"if (FALSE) { # interactive() library(future)  # Limit runtime to 10 minutes and total memory to 400 MiB per future, # request a parallel environment with four slots on a single host. # Submit to the 'freecycle' queue. Load environment modules 'r' and # 'jags'. Report on job details at startup and at the end of the job. plan(future.batchtools::batchtools_torque, resources = list(   walltime = \"00:10:00\", mem = \"100mb\",  ## memory is per process   asis = c(\"-l nodes=1:ppn=4\", \"-q freecycle\"),   modules = c(\"r\", \"jags\"),   details = TRUE ))  f <- future({   data.frame(     hostname = Sys.info()[[\"nodename\"]],           os = Sys.info()[[\"sysname\"]],        cores = unname(parallelly::availableCores())   ) }) info <- value(f) print(info) }"},{"path":"https://future.batchtools.futureverse.org/reference/delete.BatchtoolsFuture.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes a batchtools future — delete.BatchtoolsFuture","title":"Removes a batchtools future — delete.BatchtoolsFuture","text":"Removes batchtools future","code":""},{"path":"https://future.batchtools.futureverse.org/reference/delete.BatchtoolsFuture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes a batchtools future — delete.BatchtoolsFuture","text":"","code":"# S3 method for class 'BatchtoolsFuture' delete(   future,   onRunning = c(\"warning\", \"error\", \"skip\"),   onFailure = c(\"error\", \"warning\", \"ignore\"),   onMissing = c(\"ignore\", \"warning\", \"error\"),   times = 10L,   ... )"},{"path":"https://future.batchtools.futureverse.org/reference/delete.BatchtoolsFuture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes a batchtools future — delete.BatchtoolsFuture","text":"future future. onRunning Action future running appears run. onFailure Action failing delete future. onMissing Action future exist. times number tries giving . ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/delete.BatchtoolsFuture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes a batchtools future — delete.BatchtoolsFuture","text":"(invisibly) TRUE deleted FALSE otherwise.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/future.batchtools.html","id":null,"dir":"Reference","previous_headings":"","what":"future.batchtools: A Future for batchtools — future.batchtools","title":"future.batchtools: A Future for batchtools — future.batchtools","text":"future.batchtools package implements Future API top batchtools futures can resolved instance high-performance compute (HPC) clusters via job schedulers. Future API defined future package.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/future.batchtools.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"future.batchtools: A Future for batchtools — future.batchtools","text":"use batchtools futures, load future.batchtools, select type future wish use via future::plan().","code":""},{"path":[]},{"path":"https://future.batchtools.futureverse.org/reference/future.batchtools.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"future.batchtools: A Future for batchtools — future.batchtools","text":"Maintainer: Henrik Bengtsson henrikb@braju.com (ORCID) [copyright holder]","code":""},{"path":"https://future.batchtools.futureverse.org/reference/future.batchtools.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"future.batchtools: A Future for batchtools — future.batchtools","text":"","code":"if (FALSE) { # interactive() library(future) plan(future.batchtools::batchtools_local) demo(\"mandelbrot\", package = \"future\", ask = FALSE) }"},{"path":"https://future.batchtools.futureverse.org/reference/grapes-resources-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporarily tweaks the resources for the current batchtools strategy — %resources%","title":"Temporarily tweaks the resources for the current batchtools strategy — %resources%","text":"Temporarily tweaks resources current batchtools strategy","code":""},{"path":"https://future.batchtools.futureverse.org/reference/grapes-resources-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporarily tweaks the resources for the current batchtools strategy — %resources%","text":"","code":"fassignment %resources% tweaks"},{"path":"https://future.batchtools.futureverse.org/reference/grapes-resources-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporarily tweaks the resources for the current batchtools strategy — %resources%","text":"fassignment future assignment, e.g. x %<-% { expr }. tweaks named list (vector) resource batchtools parameters (see Section 'Resources' batchtools::submitJobs()) changed relative current strategy.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/loggedOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Logged output of batchtools future — loggedOutput","title":"Logged output of batchtools future — loggedOutput","text":"Logged output batchtools future","code":""},{"path":"https://future.batchtools.futureverse.org/reference/loggedOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logged output of batchtools future — loggedOutput","text":"","code":"loggedOutput(...)  # S3 method for class 'BatchtoolsFuture' loggedError(future, ...)"},{"path":"https://future.batchtools.futureverse.org/reference/loggedOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logged output of batchtools future — loggedOutput","text":"future future. ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/loggedOutput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logged output of batchtools future — loggedOutput","text":"character vector logical scalar.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/nbrOfWorkers.BatchtoolsFutureBackend.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the number of batchtools workers — nbrOfWorkers.BatchtoolsFutureBackend","title":"Gets the number of batchtools workers — nbrOfWorkers.BatchtoolsFutureBackend","text":"Tries infer total number batchtools workers.  done using various ad-hoc procedures based code inspection batchtools .","code":""},{"path":"https://future.batchtools.futureverse.org/reference/nbrOfWorkers.BatchtoolsFutureBackend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the number of batchtools workers — nbrOfWorkers.BatchtoolsFutureBackend","text":"","code":"# S3 method for class 'BatchtoolsFutureBackend' nbrOfWorkers(evaluator)"},{"path":"https://future.batchtools.futureverse.org/reference/nbrOfWorkers.BatchtoolsFutureBackend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the number of batchtools workers — nbrOfWorkers.BatchtoolsFutureBackend","text":"evaluator future evaluator function. NULL (default), current evaluator returned future::plan() used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/nbrOfWorkers.BatchtoolsFutureBackend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the number of batchtools workers — nbrOfWorkers.BatchtoolsFutureBackend","text":"number \\([1, Inf]\\).","code":""},{"path":"https://future.batchtools.futureverse.org/reference/print.BatchtoolsFuture.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a batchtools future — print.BatchtoolsFuture","title":"Prints a batchtools future — print.BatchtoolsFuture","text":"Prints batchtools future","code":""},{"path":"https://future.batchtools.futureverse.org/reference/print.BatchtoolsFuture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a batchtools future — print.BatchtoolsFuture","text":"","code":"# S3 method for class 'BatchtoolsFuture' print(x, ...)"},{"path":"https://future.batchtools.futureverse.org/reference/print.BatchtoolsFuture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a batchtools future — print.BatchtoolsFuture","text":"x BatchtoolsFuture object ... used.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/zzz-future.batchtools.options.html","id":null,"dir":"Reference","previous_headings":"","what":"Options used for batchtools futures — zzz-future.batchtools.options","title":"Options used for batchtools futures — zzz-future.batchtools.options","text":"R options environment variables used future.batchtools package. See future::future.options additional ones apply futures general.WARNING: Note names default values options may change future versions package.  Please use care notice.","code":""},{"path":"https://future.batchtools.futureverse.org/reference/zzz-future.batchtools.options.html","id":"settings-for-batchtools-futures","dir":"Reference","previous_headings":"","what":"Settings for batchtools futures","title":"Options used for batchtools futures — zzz-future.batchtools.options","text":"future.batchtools.workers: (positive numeric +Inf) default number workers available HPC schedulers job queues.  (Default: 100) future.batchtools.output: (logical) TRUE, batchtools produce extra output. FALSE, output disabled setting batchtools options batchtools.verbose batchtools.progress FALSE. (Default: getOption(\"future.debug\", FALSE)) future.batchtools.expiration.tail: (positive numeric) batchtools job expires, last lines relayed batchtools futures help troubleshooting. option controls many lines displayed. (Default: 48L) future.cache.path: (character string) absolute relative path specifying root folder batchtools registry folders stored. folder needs accessible hosts (\"workers\"). Specifically, must folder local machine file.path(tempdir(), \".future\" job scheduler HPC environment used. (Default: .future current working directory) future.batchtools.delete: (character string) Controls whether future's batchtools registry folder deleted future result collected. \"always\", always deleted. \"never\", never deleted. \"-success\", deleted future resolved successfully, whereas failed, left -help troubleshooting. (Default: \"-success\")","code":""},{"path":"https://future.batchtools.futureverse.org/reference/zzz-future.batchtools.options.html","id":"environment-variables-that-set-r-options","dir":"Reference","previous_headings":"","what":"Environment variables that set R options","title":"Options used for batchtools futures — zzz-future.batchtools.options","text":"R future.batchtools.* options can set corresponding environment variable R_FUTURE_BATCHTOOLS_* future.batchtools package loaded.  means environment variables must set future.batchtools package loaded order effect. example, R_FUTURE_BATCHTOOLS_WORKERS=\"200\" set, option future.batchtools.workers set 200 (numeric).","code":""},{"path":"https://future.batchtools.futureverse.org/reference/zzz-future.batchtools.options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Options used for batchtools futures — zzz-future.batchtools.options","text":"","code":"# Set an R option: options(future.cache.path = \"/cluster-wide/folder/.future\")"},{"path":[]},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"significant-changes-development-version","dir":"Changelog","previous_headings":"","what":"Significant Changes","title":"Version (development version)","text":"future.batchtools now implements FutureBackend API introduced future 1.40.0 (2025-04-10).","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version (development version)","text":"Batchtools future backends gained argument delete controlling batchtools futures deleted file system. Supported values \"-success\", \"never\" \"always\". default value can set via R option future.batchtools.delete. types batchtools future can now interrupted, including batchtools_multicore job-scheduler backends, e.g. batchtools_sge batchtools_slurm. Canceling batchtools futures now interrupt default, backend supports . Calling plan() batchtools_sge batchtools_slurm reports version scheduler. Printing batchtools future show logged output. Built-job-script templates: Tidy built-template job scripts Bash, SGE, Slurm Torque/PBS. Add built-template job scripts LSF OpenLava. built-template job scripts support “-” resource specifications via character vector resources[[\"asis\"]]. built-template job scripts support “environment module” resource specifications via character vector resources[[\"modules\"]]. specified, corresponding module load <name> entries injected generated job script. built-template job scripts support “startup” “shutdown” code resource specifications via character vectors resources[[\"startup\"]] resources[[\"shutdown\"]]. specified, corresponding lines injected generated job script beginning end, respectively. built-template job scripts support “details” resource specification via logical scalar resources[[\"details\"]]. TRUE, scheduler job details outputted log files beginning job summaries end. built-template job scripts, written Bash, error exit early, setting strict Bash options. help troubleshooting, especially getting started.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"documentation-development-version","dir":"Changelog","previous_headings":"","what":"Documentation","title":"Version (development version)","text":"Add timeout <runtime> ... default batchtools_bash template script illustrate control runtime via backend resources argument. Add explicit batchtools arguments scheduler.latency fs.latency batchtools backends, applicable.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version (development version)","text":"Calling value() terminated batchtools job take long time returned error. read logged output part error message. output file, batchtools wait file fs.latency seconds (default 65 seconds) give job schedulers global file system time write output file. Now future.batchtools longer wait files read content exists checked.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"deprecated-and-defunct-development-version","dir":"Changelog","previous_headings":"","what":"Deprecated and Defunct","title":"Version (development version)","text":"R option future.delete deprecated. Please use new R option future.batchtools.delete instead. backward compatible reasons, R option future.delete sets option future.batchtools.delete packages loaded latter already set. future.delete FALSE, future.batchtools.delete set \"never\". future.delete TRUE, future.batchtools.delete set \"-success\".","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-0122","dir":"Changelog","previous_headings":"","what":"Version 0.12.2","title":"Version 0.12.2","text":"CRAN release: 2025-06-06","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-12-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.12.2","text":"Attempts cancel batchtools futures via cancel() result “Interruption futures require backend implementing FutureBackend API”. package implements new FutureBackend API future (>= 1.40.0), calls cancel() silently ignored.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-0121","dir":"Changelog","previous_headings":"","what":"Version 0.12.1","title":"Version 0.12.1","text":"CRAN release: 2023-12-20","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-12-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.12.1","text":"plan(future.batchtools::batchtools_multicore) support workers argument function.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-0120","dir":"Changelog","previous_headings":"","what":"Version 0.12.0","title":"Version 0.12.0","text":"CRAN release: 2023-02-24","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"new-features-0-12-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 0.12.0","text":"Improved performance batchtools futures avoiding re-checking batchtools status batchtools job already observed resolved. Checking batchtools status fairly expense, especially since status check queries set files file system. Improved performance batchtools futures making removal batchtools registry 10-15 times faster.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-12-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.12.0","text":"run() BatchtoolsFuture update RNG state, future attach packages.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-0110","dir":"Changelog","previous_headings":"","what":"Version 0.11.0","title":"Version 0.11.0","text":"CRAN release: 2022-12-14","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"significant-changes-0-11-0","dir":"Changelog","previous_headings":"","what":"Significant Changes","title":"Version 0.11.0","text":"R_FUTURE_BATCHTOOLS_* environment variables now read future.batchtools package loaded, set corresponding future.batchtools* option. line packages Futureverse works. Add nbrOfFreeWorkers() batchtools futures.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"new-features-0-11-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 0.11.0","text":"now possible tweak arguments used underlying batchtools::makeClusterFunctionsNnn() function batchtools_nnn backends, e.g. plan(future.batchtools::batchtools_slurm, scheduler.latency = 60). plan(future.batchtools::batchtools_multicore, workers = (1)) overrides fallback batchtools_local forces single batchtools_multicore worker. print() BatchtoolsFuture now reports batchtools configuration file (R script) batchtools job template file (shell script) info location, file size, number lines, exist. run() BatchtoolsFuture now produce informative BatchtoolsFutureError case batchtools::submitJobs() fails, instance, due invalid job-scheduler resource specifications. Add BatchtoolsFuture subclasses; abstract BatchtoolsUniprocessFuture, abstract BatchtoolsMultiprocessFuture, BatchtoolsInteractiveFuture, BatchtoolsLocalFuture, BatchtoolsMulticoreFuture, BatchtoolsLsfFuture, BatchtoolsOpenLavaFuture, BatchtoolsSGEFuture, BatchtoolsSlurmFuture, BatchtoolsTorqueFuture, BatchtoolsCustomFuture. Add batchtools_bash BatchtoolsBashFuture illustrate create basic batchtools_custom future based batchtools template file bash.tmpl part package. Add batchtools_ssh BatchtoolsSSHFuture creating batchtools futures based batchtools SSH workers created batchtools::makeClusterFunctionsSSH(). Add example template files SGE Slurm.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"miscellaneous-0-11-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"Version 0.11.0","text":"result() HPC batchtools backends use timeout fs.latency seconds (set cluster functions) trying collect logged output. However, since already collected results, log file available already need wait log file appear. , temporarily set fs.latency = 1.0 (second) timeout trying find log file. makes big difference case template used --output=<path> location --output=<%= log.file %>. cases, log file found, requiring full timeout complete.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-11-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.11.0","text":"Using plan(future.batchtools::batchtools_nnn, finalize = FALSE) give warning Detected 1 unknown future arguments: 'finalize'. Template files system.file(package = \"future.batchtools\", \"templates\") found. run(), resolved(), result() BatchtoolsFuture update RNG state.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-0100","dir":"Changelog","previous_headings":"","what":"Version 0.10.0","title":"Version 0.10.0","text":"CRAN release: 2021-01-04","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"significant-changes-0-10-0","dir":"Changelog","previous_headings":"","what":"Significant Changes","title":"Version 0.10.0","text":"Lazy batchtools futures creates internal batchtools registry future launched. Removed S3 generic functions await(), finished(), status(), functions used internal purposes.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"documentation-0-10-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"Version 0.10.0","text":"Document option future.delete clarify option future.cache.path help(\"future.batchtools.options\").","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-10-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.10.0","text":"run() called twice BatchtoolsFuture, produce FutureError regular non-classed error.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"deprecated-and-defunct-0-10-0","dir":"Changelog","previous_headings":"","what":"Deprecated and Defunct","title":"Version 0.10.0","text":"Removed S3 generic functions await(), finished(), status(), functions used internal purposes.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-090","dir":"Changelog","previous_headings":"","what":"Version 0.9.0","title":"Version 0.9.0","text":"CRAN release: 2020-04-14","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"significant-changes-0-9-0","dir":"Changelog","previous_headings":"","what":"Significant Changes","title":"Version 0.9.0","text":"default number workers HPC environments now 100. revert previous default +Inf, see news entry.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"new-features-0-9-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 0.9.0","text":"now possible configure default number workers job queue HPC scheduler via either R option future.batchtools.workers environment variable R_FUTURE_BATCHTOOLS_WORKERS. now possible configure batchtools registries used batchtools futures via new argument registry plan(). argument named list parameters recognized batchtools package, e.g. plan(future.batchtools::batchtools_sge, registry = list(...)). notable example, see news entries. default working directory batchtools futures current working directory R batchtools future created. corresponds specifying plan(future.batchtools::batchtools_nnn, registry = list(work.dir = NULL). Sometimes useful use explicit working directory guaranteed available workers shared file system, e.g. plan(future.batchtools::batchtools_nnn, registry = list(work.dir = \"~\")). possible control batchtools use file compression exported globals results specifying batchtools registry parameter compress. example, turn file compression, use plan(future.batchtools::batchtools_nnn, registry = list(compress = FALSE)). default location .future folder can controlled R option future.cache.path environment variable R_FUTURE_CACHE_PATH. batchtools_custom() BatchtoolsFuture gained argument conf.file. Using plan(future.batchtools::batchtools_custom) now use batchtools configuration file (R script) found batchtools::findConfFile() search path.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"documentation-0-9-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"Version 0.9.0","text":"Add help(\"future.batchtools.options\") descriptions R options environment variables used specifically future.batchtools package.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-081","dir":"Changelog","previous_headings":"","what":"Version 0.8.1","title":"Version 0.8.1","text":"CRAN release: 2019-10-01","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-8-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.8.1","text":"print() BatchtoolsFuture produce error underlying batchtools Registry incomplete.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-080","dir":"Changelog","previous_headings":"","what":"Version 0.8.0","title":"Version 0.8.0","text":"CRAN release: 2019-05-05","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"new-features-0-8-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 0.8.0","text":"Setting option future.delete FALSE now prevent removal batchtools registry folders. batchtools job expires, instance scheduler terminates job running allocated resources, BatchtoolsFutureError produced default outputs tail output logged batchtools. default number lines displayed end now increased six 48 - number now can set via option future.batchtools.expiration.tail. Now informative error message produced batchtools *.tmpl template file found. Debug messages now prepended timestamp.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-8-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.8.0","text":"Argument workers function. Argument workers type character silently accepted effectively interpreted workers = length(workers).","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-072","dir":"Changelog","previous_headings":"","what":"Version 0.7.2","title":"Version 0.7.2","text":"CRAN release: 2019-01-04","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"documentation-0-7-2","dir":"Changelog","previous_headings":"","what":"Documentation","title":"Version 0.7.2","text":"Add simple example(future_custom).","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"fixes-0-7-2","dir":"Changelog","previous_headings":"","what":"Fixes","title":"Version 0.7.2","text":"Made internal code agile upcoming changes future package captured error represented.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"software-quality-0-7-2","dir":"Changelog","previous_headings":"","what":"Software Quality","title":"Version 0.7.2","text":"FYI: Every release tested one Torque/PBS one SGE scheduler.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-7-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.7.2","text":"resolve() lazy batchtools future stall never return.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-071","dir":"Changelog","previous_headings":"","what":"Version 0.7.1","title":"Version 0.7.1","text":"CRAN release: 2018-07-18","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"new-features-0-7-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 0.7.1","text":"batchtools_* backends support handling standard output implemented future (>= 1.9.0).","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-7-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.7.1","text":"bug introduced future.batchtools 0.7.0 result Error readLog(id, reg = reg) : Log file job id 1 available\" using one batchtools backends. occurred value queried. observed using batchtools_torque using batchtools_local. bug missed 0.7.0 release tested TORQUE/PBS HPC scheduler .","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-070","dir":"Changelog","previous_headings":"","what":"Version 0.7.0","title":"Version 0.7.0","text":"CRAN release: 2018-05-04","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"new-features-0-7-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 0.7.0","text":"Argument workers future strategies may now also function, called without argument future strategy set used -. instance, plan(future.callr::callr, workers = halfCores) halfCores <- function() { max(1, round(availableCores() / 2)) } use half number available cores. useful using nested future strategies remote machines.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"code-refactoring-0-7-0","dir":"Changelog","previous_headings":"","what":"Code Refactoring","title":"Version 0.7.0","text":"Preparing futures gather richer set results batchtools backends.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-060","dir":"Changelog","previous_headings":"","what":"Version 0.6.0","title":"Version 0.6.0","text":"CRAN release: 2017-09-11","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 0.6.0","text":"built-attempts batchtools finding default template file fails, system(\"templates\", package = \"future.batchtools\") searched template files well. Currently, exists torque.tmpl file. job’s name scheduler now set future’s label (requires batchtools 0.9.4 newer). label specified, default job name controlled batchtools. period poll scheduler check whether future (job) finished now increases geometrically function number polls. lowers load scheduler long running jobs. error message expired batchtools futures now include last lines logged output, sometimes includes clues future expired. instance, TORQUE/PBS job use allocated amount memory might terminated scheduler leaving message PBS: job killed: vmem 1234000 exceeded limit 1048576 output. print() BatchtoolsFuture returns object invisibly.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.6.0","text":"Calling future_lapply() functions containing globals part non-default packages using batchtools futures give error complaining global missing. due updates future (>= 1.4.0) broke package. loggedOutput() BatchtoolsFuture always return NULL unless error occurred.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"version-050","dir":"Changelog","previous_headings":"","what":"Version 0.5.0","title":"Version 0.5.0","text":"CRAN release: 2017-06-03","code":""},{"path":[]},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 0.4.0","text":"Added batchtools_custom() specifying batchtools futures using type batchtools cluster functions. batchtools_template(pathname = NULL, type = <type>) now relies batchtools package locating <type> template file. nbrOfWorkers() batchtools futures now defaults +Inf unless evaluator’s workers cluster.functions specify something else. Renamed argument pathname template batchtools_<tmpl>() functions.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"Version 0.4.0","text":"plan(future.batchtools::batchtools_nnn), created futures produce error (.finite(workers)) TRUE due outdated sanity check.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"software-quality-0-4-0","dir":"Changelog","previous_headings":"","what":"Software Quality","title":"Version 0.4.0","text":"TESTS: Added test future_lapply() batchtools backends. TESTS: Added optional tests batchtools_* HPC schedulers listed environment variable R_FUTURE_TESTS_STRATEGIES.","code":""},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"code-refactoring-0-4-0","dir":"Changelog","previous_headings":"","what":"Code Refactoring","title":"Version 0.4.0","text":"CLEANUP: Package longer depends R.utils.","code":""},{"path":[]},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Version 0.3.0","text":"number jobs one can add queues HPC schedulers principle unlimited, number available workers batchtools_* backends reported +Inf. However, number workers used future_lapply() decide many futures used best partition elements, means future_lapply() always use one future per element. , now possible specify plan(future.batchtools::batchtools_nnn, workers = n) n target number workers.","code":""},{"path":[]},{"path":"https://future.batchtools.futureverse.org/news/index.html","id":"globals-0-2-0","dir":"Changelog","previous_headings":"","what":"Globals","title":"Version 0.2.0","text":"batchtools (>= 0.9.2) now supports exporting objects type names (previously possible mapped strictly valid filenames). allowed avoid lots internal workaround code encoding decoding globals.","code":""},{"path":[]}]
